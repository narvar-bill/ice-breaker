name: Deploy static site to GitHub Pages

on:
  push:
    branches: [ main ]

permissions:
  contents: write   # allow pushing branches
  pages: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # allow pushing with the provided GITHUB_TOKEN
          persist-credentials: true

      - name: Configure git for Actions
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Ensure gh-pages branch exists (first-time setup)
        env:
          REPO: ${{ github.repository }}
        run: |
          # Capture current branch (fallback to 'main' if HEAD/detached)
          CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD 2>/dev/null || echo "main")
          if [ "$CURRENT_BRANCH" = "HEAD" ] || [ -z "$CURRENT_BRANCH" ]; then
            CURRENT_BRANCH="main"
          fi

          # Check if gh-pages exists on remote; create an initial orphan branch if it doesn't.
          if ! git ls-remote --exit-code --heads origin gh-pages; then
            git checkout --orphan gh-pages

            # Remove all tracked files only if any exist to avoid pathspec errors
            if [ -n "$(git ls-files)" ]; then
              git rm -rf .
            fi

            git commit --allow-empty -m "Initialize gh-pages branch"
            git push origin gh-pages

            # Return to the original branch explicitly (avoid `git checkout -` which can fail)
            git checkout "$CURRENT_BRANCH"
          fi

      - name: Setup Node (optional)
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./
